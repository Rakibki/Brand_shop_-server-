const express = require('express')
const cors = require('cors')
const { MongoClient, ServerApiVersion } = require('mongodb');

const app = express()
const PORT = process.env.PORT || 5000

app.use(express.json())
app.use(cors())

app.get('/', (req, res) => {
    res.send("Home Route")
})


const uri = "mongodb+srv://Brand-Shop-project:Xu4cUQklKMQo0bDO@cluster0.sinogwr.mongodb.net/?retryWrites=true&w=majority";
const client = new MongoClient(uri, {
  serverApi: {
    version: ServerApiVersion.v1,
    strict: true,
    deprecationErrors: true,
  }
});

async function run() {
  try {
    await client.connect();

    const database = client.db("BrandShopDB");
    const TrendingProducts = database.collection("TrendingProducts");
    const productsCollection = database.collection("productsCollection");


    app.get('/TrendingProducts', async  (req, res) => {
        const corsue = TrendingProducts.find();
        const result = await corsue.toArray()
        res.send(result)
    })
	
	app.post("/products", async (req, res) => {
		const product = req.body;
		const result = await productsCollection.insertOne(product);
		res.send(result)
		console.log(product)
	})

	app.get("/products/:name", async (req, res) => {
		const {name} = req.params
		const result = await productsCollection.find({BrandName: name}).toArray();
		res.send(result)
	})

	app.get("/product/:id", async(req, res) => {
		 const id = req.params.id
        const query = { _id: new ObjectId(id) };
        const result = await productsCollection.findOne(query);
        res.send(result)
	})

    await client.db("admin").command({ ping: 1 });
    console.log("Pinged your deployment. You successfully connected to MongoDB!");
  } finally {
    // await client.close();
  }
}
run().catch(console.dir);


app.listen(PORT, () => {
    console.log("server is Running");
})